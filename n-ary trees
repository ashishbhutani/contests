#include <iostream>
using namespace std;

//Representing n ary trees as binary trees and finding elements in them

struct node {
  int key;
  struct node * child;
  struct node * sibling;
};

bool find(node* n, int key) {
  if (n && n->key == key) return true;
  if (n->sibling)
    return find(n->sibling, key);
  else if(n->child)
    return find(n->child, key);
  else
    return false;
}

int main () {
  node * root = new node;
  root->key = 1;
  cout<<root->key;
  
  root->child = new node;
  root->child->key = 2;
  cout<<root->child->key<<endl;
  
  root->sibling = NULL;
  
  root->child->sibling = new node;
  root->child->sibling->key = 3;
  cout<<root->child->sibling->key<<endl;
  
  root->child->sibling->sibling = new node;
  root->child->sibling->sibling->key = 4;
  cout<<root->child->sibling->sibling->key<<endl;
  
  root->child->child = new node;
  root->child->child->key = 5;
  cout<<root->child->child->key<<endl;
  
  root->child->child->sibling = new node;
  root->child->child->sibling->key = 6;
  cout<<root->child->child->sibling->key<<endl;
  
  root->child->sibling->child = new node;
  root->child->sibling->child->key = 7;
  cout<<root->child->sibling->child->key<<endl;
  
  root->child->sibling->sibling->child = new node;
  root->child->sibling->sibling->child->key = 8;
  cout<<root->child->sibling->sibling->child->key<<endl;
  
  root->child->sibling->sibling->child->sibling = new node;
  root->child->sibling->sibling->child->sibling->key = 9;
  cout<<root->child->sibling->sibling->child->sibling->key<<endl;
  
  for (int i = 0;i<20;i++) {
    cout<<"i = "<<i<<"present = "<<find(root, i)<<endl;
  }
  
}

